name: deploy dev

on:
  workflow_dispatch:
    branches:
      - 'master'
      - 'feat/*'
      - 'fix/*'
      - 'ref/*'
    inputs:
      stage:
        description: 'stage to deploy'
        required: true
        default: 'dev-id'
        type: choice
        options:
          - dev-id
          - dev-sg

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}

jobs:
  image_push:
    name: push image
    runs-on: ubuntu-latest
    env:
      SERVICE_STAGE: ${{ inputs.stage }}
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: set tag
        id: set_tag
        run: |
          echo "IMAGE_TAG=$(date +%Y-%m-%d.%s)" >> $GITHUB_ENV
          echo "tag=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: login gcloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: build docker image
        run: make build-image

      - name: push docker image
        run: make push-image

  terraform_deploy:
    name: deploy with terraform
    needs:
      - image_push
    runs-on: ubuntu-latest
    env:
      SERVICE_STAGE: ${{ inputs.stage }}
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
      
      - name: set up terraform env
        run: |
          echo "TF_VAR_project_id=${PROJECT_ID}" >> $GITHUB_ENV
          echo "TF_VAR_service_name=${SERVICE_NAME}" >> $GITHUB_ENV
          echo "TF_VAR_service_account=${SERVICE_ACCOUNT}" >> $GITHUB_ENV
          echo "TF_VAR_stage=${SERVICE_STAGE}" >> $GITHUB_ENV
          echo "TF_VAR_image_version=${{needs.image_push.outputs.image_tag}}" >> $GITHUB_ENV

      - name: terraform init
        run: terraform init

      - name: terraform format
        run: terraform fmt -check

      - name: terraform validation
        run: terraform validate -no-color

      - name: terraform plan
        id: plan
        run: make pre-deploy
        continue-on-error: true

      - name: terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: terraform apply
        run: make deploy-dev
